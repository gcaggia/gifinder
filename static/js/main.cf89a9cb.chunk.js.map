{"version":3,"sources":["Header.js","components/SearchForm.js","components/GifItem.js","components/SearchResults.js","Main.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","Collapse","Text","href","bannerColor","SearchForm","searchTerm","onChangeSearchTerm","onSubmitSearch","Row","Col","xs","sm","span","offset","Provider","value","color","size","Form","Control","placeholder","onChange","e","target","Button","variant","type","onClick","GifItem","urlImage","md","src","alt","SearchResults","gifResults","paginationNumber","onChangePagination","scrollToTop","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","onClickPage","useCallback","num","length","Card","slice","map","gifResult","index","key","toString","images","downsized","url","Pagination","First","Prev","Item","Next","Last","Main","searchResults","Container","Footer","App","props","state","handleChangeSearchTerm","bind","handleSubmitSearch","handleChangePagination","term","this","setState","preventDefault","fetch","then","response","json","JsonResults","data","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf89a9cb.chunk.js","sourcesContent":["import React    from 'react';\nimport {Navbar} from 'react-bootstrap';\nimport GithubCorner from 'react-github-corner';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <Navbar className=\"p-3 justify-content-between\">\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text>\n            <a className=\"text-fork-me\" href=\"https://github.com/gcaggia/gifinder\">\n              Fork me on Github\n            </a>\n            <GithubCorner href=\"https://github.com/gcaggia/gifinder\"\n                          bannerColor={'#4b6584'}\n            />\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;","import React                    from 'react';\nimport {Button, Col, Form, Row} from 'react-bootstrap';\nimport { IconContext } from \"react-icons\";\nimport { FaSearch } from 'react-icons/fa'\n\nconst SearchForm = ({searchTerm, onChangeSearchTerm, onSubmitSearch}) => {\n  return (\n    <Row>\n      <Col xs={12} sm={{ span: 9, offset: 2 }}>\n        <Row className=\"logo-row\">\n          <Col xs={{ span: 9, offset: 1 }} className=\"logo-col text-center\">\n            <IconContext.Provider value={{ color: \"#d1d8e0\", size: \"55px\" }}>\n              <FaSearch className=\"logo-icon\" />\n            </IconContext.Provider>\n            <h1 className=\"logo-text\">\n              <span className=\"logo-letter-g\" >G</span>\n              <span className=\"logo-letter-i1\">I</span>\n              <span className=\"logo-letter-f\" >F</span>\n              <span className=\"logo-letter-i2\">i</span>\n              <span className=\"logo-letter-n\" >n</span>\n              <span className=\"logo-letter-d\" >d</span>\n              <span className=\"logo-letter-e\" >e</span>\n              <span className=\"logo-letter-r\" >r</span>\n            </h1>\n          </Col>\n        </Row>\n        <Form>\n          <Form.Row>\n            <Col xs={{ span: 6, offset: 2 }} >\n              <Form.Control\n                size=\"lg\"\n                placeholder=\"Search your favourite GIF\"\n                value={searchTerm}\n                onChange={(e) => onChangeSearchTerm(e.target.value)}\n              />\n            </Col>\n            <Col xs={2} sm={2}>\n              <Button\n                size=\"lg\"\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={(e) => onSubmitSearch(e)}\n              >\n                Search\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SearchForm;","import React from 'react';\nimport {Col} from 'react-bootstrap';\n\nconst GifItem = ({urlImage}) => {\n  return (\n    <Col md={3}>\n      <img src={urlImage}\n           alt=\"#\"\n           className=\"card-img p-2\"\n      />\n    </Col>\n  );\n};\n\nexport default GifItem;","import React, {useCallback}         from 'react';\nimport {Card, Col, Pagination, Row} from 'react-bootstrap';\nimport GifItem                      from './GifItem';\n\nconst SearchResults = ({gifResults, paginationNumber, onChangePagination}) => {\n  const scrollToTop = () => {\n    const c = document.documentElement.scrollTop || document.body.scrollTop;\n    if (c > 180) {\n      window.requestAnimationFrame(scrollToTop);\n      window.scrollTo(0, c - c / 8);\n    }\n  };\n\n  const onClickPage = useCallback((num) => {\n    if (num < 1 || num > 4 || num === paginationNumber) {\n      return\n    }\n    scrollToTop();\n    return onChangePagination(num);\n  }, [onChangePagination, scrollToTop, paginationNumber]);\n\n  return (\n    <div className={gifResults.length === 0 ? 'empty-result' : 'has-result'}>\n      <Row className=\"mt-5 pt-4 pb-5\">\n        <Col md={12} className=\"text-left\">\n          <h5>Page {paginationNumber} | Results</h5>\n        </Col>\n        <Col md={12}>\n          <Card className=\"p-2\">\n            <Row className=\"text-center\">\n              { gifResults.slice((paginationNumber-1)*12, (paginationNumber)*12)\n                  .map((gifResult, index) =>\n                <GifItem\n                  key={index.toString()}\n                  urlImage={gifResult.images.downsized.url}\n                />\n              )\n              }\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n      <div className=\"pagination-result\">\n        <Pagination className=\"justify-content-center\">\n          <Pagination.First onClick={() => onClickPage(1)} />\n          <Pagination.Prev onClick={() => onClickPage(paginationNumber-1)} />\n          <Pagination.Item onClick={() => onClickPage(1)} className={`${paginationNumber === 1 ? 'active':''}`}>{1}</Pagination.Item>\n          <Pagination.Item onClick={() => onClickPage(2)} className={`${paginationNumber === 2 ? 'active':''}`}>{2}</Pagination.Item>\n          <Pagination.Item onClick={() => onClickPage(3)} className={`${paginationNumber === 3 ? 'active':''}`}>{3}</Pagination.Item>\n          <Pagination.Item onClick={() => onClickPage(4)} className={`${paginationNumber === 4 ? 'active':''}`}>{4}</Pagination.Item>\n          <Pagination.Next onClick={() => onClickPage(paginationNumber+1)} />\n          <Pagination.Last onClick={() => onClickPage(4)} />\n        </Pagination>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResults;","import React                                           from 'react';\nimport {Container} from 'react-bootstrap';\nimport SearchForm                                      from './components/SearchForm';\nimport SearchResults                                   from './components/SearchResults';\n\nconst Main = (\n  {\n    searchTerm,\n    searchResults,\n    onChangeSearchTerm,\n    onSubmitSearch,\n    paginationNumber,\n    onChangePagination\n  }) => {\n  return (\n    <main className=\"flex-fill mt-5 pt-5\">\n      <Container className=\"main-container\">\n        <SearchForm searchTerm={searchTerm}\n                    onChangeSearchTerm={onChangeSearchTerm}\n                    onSubmitSearch={onSubmitSearch}\n        />\n        <SearchResults gifResults={searchResults}\n                       paginationNumber={paginationNumber}\n                       onChangePagination={onChangePagination}\n                       className=\"mt-5\"\n        />\n      </Container>\n    </main>\n  );\n};\n\nexport default Main;","import React    from 'react';\nimport {Navbar} from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Navbar className=\"p-5 navbar-footer\">\n        <div className=\"text-white pl-5\">\n          <span className=\"footer-signature\">Guillaume </span>  |\n          <a className=\"footer-link\" href=\"http://codé.com/\"> codé.com</a>\n        </div>\n      </Navbar>\n    </footer>\n  );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Main   from './Main';\nimport Footer from './Footer';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    // State of our app\n    this.state = {\n      searchTerm: '',\n      searchResults: [],\n      paginationNumber: 1\n    };\n    // This binding is necessary to make `this` work in the callback\n    this.handleChangeSearchTerm = this.handleChangeSearchTerm.bind(this);\n    this.handleSubmitSearch     = this.handleSubmitSearch.bind(this);\n    this.handleChangePagination = this.handleChangePagination.bind(this);\n  }\n\n  handleChangeSearchTerm(term) {\n    this.setState({\n      searchTerm: term,\n      paginationNumber: 1\n    });\n  }\n\n  handleSubmitSearch(e) {\n    e.preventDefault();\n    const key = 'zgfvh4Rh2mJ3C3HEaIsgkfkTiPC5AoMy';\n    fetch(`https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${this.state.searchTerm}&limit=48&offset=0&rating=G&lang=en`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((JsonResults) => {\n        this.setState({\n          searchResults: JsonResults.data,\n          paginationNumber: 1\n        });\n      });\n  }\n\n  handleChangePagination(num) {\n    this.setState({\n      paginationNumber: num\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column sticky-footer-wrapper\">\n        <Header/>\n        <Main\n          searchTerm={this.state.searchTerm}\n          searchResults={this.state.searchResults}\n          onChangeSearchTerm={this.handleChangeSearchTerm}\n          onSubmitSearch={this.handleSubmitSearch}\n          paginationNumber={this.state.paginationNumber}\n          onChangePagination={this.handleChangePagination}\n        />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}